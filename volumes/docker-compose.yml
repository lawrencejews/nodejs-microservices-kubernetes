# version: '3.9'
services:
  redis:
    container_name: redis_container
    image: redis:alpine
    restart: always
    ports:
      - '6379:6379'
    command: redis-server --loglevel warning  
    volumes: 
      - ./docker-volumes/cache:/data
  mongodb:
    container_name: mongodb_container
    image: mongo:latest 
    restart: always 
    ports:
      - '27017:27017'
    volumes: 
      - ./docker-volumes/data:/data/db
  mysql:
    container_name: mysql_container
    image: mysql 
    command: --default-authentication-plugin=mysql_native_password
    restart: always 
    environment:
      - MYSQL_USER=marketplace
      - MYSQL_DATABASE=marketplace_auth
      - MYSQL_ROOT_PASSWORD=api
      - MYSQL_PASSWORD=api
    ports:
      - '3306:3306'
    volumes: 
      - ./docker-volumes/mysql:/var/lib/mysql
  postgres:
    container_name: postgres_container
    image: postgres 
    restart: always 
    environment:
      - POSTGRES_USER=marketplace
      - POSTGRES_PASSWORD=api
      - POSTGRES_DB=marketplace_reviews
    ports:
      - '5432:5432'
    volumes: 
      - ./docker-volumes/postgres:/var/lib/postgresql
  rabbitmq:
    container_name: rabbitmq_container
    image: rabbitmq:4.1-management-alpine
    restart: always 
    environment:
      - RABBITMQ_DEFAULT_USER=marketplace
      - RABBITMQ_DEFAULT_PASS=marketplacepass
    ports:
      - '5672:5672' # AMQP protocol port
      - '15672:15672' # Management UI
  elasticsearch: 
    container_name: elasticsearch_container
    image: docker.elastic.co/elasticsearch/elasticsearch:9.0.0
    restart: always
    environment:
      ES_JAVA_OPTS: -Xmx1g -Xms1g
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      xpack.security.authc.api_key.enabled: "true"
      xpack.monitoring.collection.enabled: "true"
      xpack.security.enrollment.enabled: "true"
    ports:
      - 9200:9200
      - 9300:9300
    volumes:
      - ./docker-volumes/elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - elastic
  kibana:
    container_name: kibana_container
    image: docker.elastic.co/kibana/kibana:9.0.0
    restart: always
    environment:
      - ELASTICSEARCH_HOSTS=["http://elasticsearch_container:9200"]
    ports: 
      - 5601:5601
    networks:
      - elastic
    volumes:
      - ./kibana.yml/:/usr/share/kibana/config/kibana.yml:ro
    depends_on:
      - elasticsearch
  notifications:
    container_name: notification_container
    build:
      context:  ../microservices/2-notification-service
      dockerfile: Dockerfile.dev
    restart: always
    ports: 
      - 4001:4001
    env_file: ../microservices/2-notification-service/.env
    environment:
      - ENABLE_APM=0 
      - NODE_ENV=development
      - CLIENT_URL=http://localhost:3300
      - RABBITMQ_ENDPOINT=amqp://marketplace:marketplacepass@rabbitmq_container:5672
      - SENDER_EMAIL=silas57@ethereal.email
      - SENDER_EMAIL_PASSWORD=XQ54Mq6Zpfz8MWbKAB
      - ELASTIC_SEARCH_URL=http://elasticsearch_container:9200
      - ELASTIC_APM_SERVER_URL=http://localhost:8200
      - ELASTIC_APM_SECRET_TOKEN=
    depends_on:
      - elasticsearch


networks:
  elastic:
    name: elastic